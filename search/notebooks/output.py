import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D

# Load the CSV data into a DataFrame
csv_data = """Model Name,Number of Vectors,Number of Calls_mean,Number of Calls_std,Time Elapsed_mean,Time Elapsed_std,IoU_mean,IoU_std,Bhattacharyya_mean,Bhattacharyya_std
Closed Loop First Order,10,42.8,1.8405855323893023,0.015022134780883758,0.000918683584999462,0.4635259660904263,0.007733720201472803,0.107022886824821,0.014830454613763599
Closed Loop First Order,25,104.02,5.200039246319714,0.03485800743103022,0.0033611308537126487,0.8072936033881123,0.007038784569959004,0.05124429079231335,0.004133898624951651
Closed Loop First Order,50,169.76,13.08147155174767,0.05767439365386959,0.005082608433876592,0.7604429299951002,0.010046760507179373,0.14284112444758684,0.008535328305523606
Closed Loop First Order,100,370.4,21.16986691753452,0.1217865371704101,0.006775811226830191,0.814434297000496,0.0054299524747640155,0.15301954904925277,0.007122841958868968
Closed Loop First Order,250,925.5,55.254974842976445,0.30203404426574704,0.018093324361008477,0.813769098154727,0.00542177992519035,0.10366962992392692,0.0038204663281691175
Closed Loop First Order,500,1840.04,110.21036656303795,0.6022069025039672,0.038053144809201786,0.8254602011497545,0.004431705209793252,0.13481293472708916,0.004989232137549614
Closed Loop First Order,1000,3610.88,224.30023974802245,1.1971293020248412,0.0805716427748847,0.8012585305175002,0.004869994282910827,0.14348981396819244,0.004051189971401815
Closed Loop First Order,1500,5506.12,330.9748519949225,1.817262716293335,0.12370558423889418,0.7890216722693029,0.004052877189559216,0.1261485213630298,0.003655832018149695
Closed Loop First Order,2000,7290.0,447.5365678822644,2.3963199186325075,0.15380613123599554,0.790129228165231,0.004248937827304025,0.13194980791853886,0.003104923532509111
Closed Loop First Order,2500,9072.78,564.0783448987149,2.9657004737854002,0.19200463372977344,0.7880686967099904,0.004422163836409806,0.12740859481945457,0.003091648332461372
Closed Loop Second Order,10,34.6,2.733018067101286,0.017219696044921837,0.0014701554052968912,0.000315493020881348,0.000644035957169278,2.0338323233421987,0.06019525514044905
Closed Loop Second Order,25,85.6,6.527805519311923,0.04090708732604976,0.003112925513575564,0.002299955223660888,0.0014051208263587541,1.5182440979596779,0.03760356612927797
Closed Loop Second Order,50,177.34,11.546905230760448,0.08406507015228268,0.006197041454166328,0.008777190164058389,0.0035482610272288048,1.3126824022420402,0.032868464866805405
Closed Loop Second Order,100,365.82,22.968203398327404,0.17137258529663082,0.013042457071187417,0.09391396454047923,0.010158183246149352,0.699819455339565,0.01804549100951759
Closed Loop Second Order,250,887.76,59.652586032863354,0.4138899230957031,0.02938526994099784,0.22728883958009227,0.018718113742306558,0.6421446629520999,0.015030157501405137
Closed Loop Second Order,500,1768.12,120.06335742397998,0.832903470993042,0.05696791629193563,0.2972235198777142,0.0179042607211557,0.7673741411438492,0.014908250176988571
Closed Loop Second Order,1000,3568.8,234.65832738738433,1.6622400999069213,0.12265186207035222,0.4724337262852761,0.024442640882321277,0.7222434209172774,0.013138732510422448
Closed Loop Second Order,1500,5316.18,358.4178777656618,2.4939266729354856,0.17719855326443557,0.5846108370203169,0.022934924040551533,0.7073532673133929,0.012085475656918426
Closed Loop Second Order,2000,7178.88,464.3773817199338,3.3664105558395385,0.25267121388276,0.5902431537436076,0.0254504128713936,0.6293836808493384,0.008004984365742145
Closed Loop Second Order,2500,8974.02,585.9120742701164,4.198130054473877,0.2792238052064235,0.6226806055588674,0.0366042783176387,0.5831067828942378,0.010752840975615493
Open Loop First Order,10,39.46,1.897474153517066,0.012115950584411577,0.0008237553645978039,0.1552988723079522,0.006772021379729871,0.7010642450187596,0.021203026602451325
Open Loop First Order,25,92.9,5.406911676507307,0.027905888557434037,0.002507315026970572,0.6761633126145331,0.01144269104645093,0.1342909011887326,0.014895246274419276
Open Loop First Order,50,203.62,10.11341804187862,0.0596491956710815,0.004447395031444237,0.8306189363985322,0.005689603801477784,0.04519011742777393,0.0041396935368954915
Open Loop First Order,100,365.56,22.57338147067045,0.10368838787078855,0.007822959542278208,0.8324549359015283,0.006028187016676359,0.15305308174143237,0.013901390655320995
Open Loop First Order,250,900.28,55.86793465351108,0.2521943044662475,0.01669598684117234,0.8440872659970284,0.005049712317569891,0.21428349181948594,0.006237261332932777
Open Loop First Order,500,1827.78,107.92841353869514,0.49814835548400876,0.032166430828169744,0.8000740607274355,0.004500458326786056,0.16248981363971496,0.006564504132712397
Open Loop First Order,1000,3680.04,214.40986498778838,0.9972082424163818,0.06130853741950376,0.7976062199385491,0.004212416505381157,0.17324248639463213,0.003807814451030435
Open Loop First Order,1500,5516.98,320.9840411825448,1.5013608932495117,0.09040749139921926,0.7892062841404143,0.004213635294666664,0.15201699413974248,0.004581553081614135
Open Loop First Order,2000,7338.22,426.94435377984547,2.006229953765869,0.11576667972216803,0.7878757757205109,0.004198325027807462,0.17231199038088185,0.0044173651499376096
Open Loop First Order,2500,9093.84,542.5880671487764,2.482486524581909,0.15515153470615753,0.7873508187365045,0.004147985067923119,0.18664568089558156,0.004585786797891366
Open Loop Second Order,10,43.82,1.2727922061357848,0.01937999248504634,0.0008906565453217322,0.001053923066613444,0.0006437150609011293,1.510186160622102,0.03384206087346272
Open Loop Second Order,25,110.66,2.825611727158045,0.04569098949432369,0.0021585631347767974,0.009565814287211885,0.001800234006116527,1.0156914816111098,0.02833848673971848
Open Loop Second Order,50,231.82,5.944264943143581,0.08883071422576899,0.003143492455091275,0.05336227139372391,0.004996139020039708,0.5784335681660059,0.014337576208995437
Open Loop Second Order,100,438.46,13.522785004787819,0.16471560001373287,0.007221936725099059,0.08737262166503912,0.005855435242720026,0.7094334907425636,0.017564316444620975
Open Loop Second Order,250,1153.1,32.266271010111424,0.44007813453674316,0.014468438780143391,0.3932555168649188,0.016210333485828506,0.33262124701239154,0.007915228469493486
Open Loop Second Order,500,2291.8,65.9000480009734,0.9026043748855591,0.029036753231390627,0.49064512610358646,0.01475727639699063,0.3339881207262335,0.00609612498503747
Open Loop Second Order,1000,4393.42,141.51845484326225,1.7383767795562743,0.05815925975495787,0.5425608583103717,0.0743720804213717,0.44333982751142725,0.017695169990343425
Open Loop Second Order,1500,6783.46,197.15602544012427,2.6931134271621704,0.08138372811681639,0.5125879030159379,0.030069295793182606,0.34608813448976383,0.00568544271602236
Open Loop Second Order,2000,8966.0,268.2969722269007,3.5876192235946656,0.11772354623876942,0.4656141746293219,0.0879032396864331,0.36937055771900495,0.011469972707386141
Open Loop Second Order,2500,11157.34,342.4397822826606,4.403302397727966,0.14684737524641894,0.48730669311160324,0.03843638553179905,0.37990647010273504,0.00807614633496943
"""

# Instead of reading from a file, let's simulate by parsing directly from the provided text
from io import StringIO

# Use the full string provided earlier
csv_full = StringIO(csv_data)

# For the code to actually run, we need to paste the full content in place of the "..." lines
# But assuming the content is correct, let's continue with parsing and plotting

# Read CSV into DataFrame
df = pd.read_csv(csv_full)

# Ensure numeric columns are correctly typed
df['Number of Vectors'] = pd.to_numeric(df['Number of Vectors'])

# Define metrics to plot
metrics = {
    'Number of Calls': ('Number of Calls_mean', 'Number of Calls_std'),
    'Time Elapsed': ('Time Elapsed_mean', 'Time Elapsed_std'),
    'IoU': ('IoU_mean', 'IoU_std'),
    'Bhattacharyya': ('Bhattacharyya_mean', 'Bhattacharyya_std'),
}

colors = {'Open Loop First Order': 'green', 'Open Loop Second Order': 'red', 'Closed Loop First Order': 'blue', 'Closed Loop Second Order': 'orange'}
markers = {'Open Loop First Order': 'o', 'Open Loop Second Order': 'o','Closed Loop First Order': 'o',  'Closed Loop Second Order': 'o'}

# Create subplots
fig, axs = plt.subplots(1, 4, figsize=(12, 4))
axs = axs.flatten()

# Get all unique model types
models = df['Model Name'].unique()
models = ['Open Loop First Order',  'Closed Loop First Order', 'Open Loop Second Order','Closed Loop Second Order']

# Plot each metric
for i, (metric, (mean_col, std_col)) in enumerate(metrics.items()):
    ax = axs[i]
    for model in models:
        model_data = df[df['Model Name'] == model]
        ax.scatter(model_data['Number of Vectors'], model_data[mean_col], label=model, color=colors[model], marker=markers[model], s=2)
        ax.errorbar(model_data['Number of Vectors'], model_data[mean_col], 
                    yerr=model_data[std_col], label=model,color=colors[model], capsize=4, fmt=markers[model], linestyle='-')
                    
    ax.set_title(metric, fontsize=14)
    ax.set_xlabel('Number of Vectors')
    ax.set_ylabel(metric)
    # ax.legend()
    ax.grid(True)

fig.suptitle("Evaluation of Radial Search Hyperparameters", fontsize=18)

fig.tight_layout(rect=[0, 0.1, 1, 1])

legend_handles = [
    Line2D([0], [0], marker=markers[name], color='w', markerfacecolor=colors[name],
           label=name, markersize=10, linestyle='None')
    for name in models
]

fig.legend(handles=legend_handles, loc='lower center', ncol=4, fontsize=10)
plt.show()
